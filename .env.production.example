# ========================================
# PRODUCTION ENVIRONMENT VARIABLES
# ========================================
# Last Updated: 2025-10-27
#
# CRITICAL: Never commit actual values to git
# Deploy checklist: https://github.com/[your-repo]/docs/DEPLOYMENT.md
#
# Variable Groups:
# 1. Application Configuration (REQUIRED)
# 2. Whop Integration (REQUIRED)
# 3. Database - Supabase (REQUIRED)
# 4. AI Services (REQUIRED)
# 5. Storage & CDN (REQUIRED)
# 6. Monitoring & Analytics (REQUIRED)
# 7. Cache & Queue (REQUIRED)
# 8. Email Service (REQUIRED)
# 9. Discord Integration (OPTIONAL - Enterprise tier)
# 10. YouTube Integration (OPTIONAL - For video import)
# 11. Security & Encryption (REQUIRED)
# ========================================

# ========================================
# 1. APPLICATION CONFIGURATION
# ========================================

# Production URL (set by Vercel automatically, or override)
NEXT_PUBLIC_APP_URL=https://your-app.vercel.app

# Environment indicator
NODE_ENV=production

# Logging configuration
LOG_LEVEL=info

# Disable Next.js telemetry in production
NEXT_TELEMETRY_DISABLED=1

# ========================================
# 2. WHOP INTEGRATION (REQUIRED)
# ========================================
# Get credentials from: https://dev.whop.com
# Documentation: https://docs.whop.com

# API Key for server-side Whop API calls
WHOP_API_KEY=whop_xxxxxxxxxxxxxxxxxxxxxxxxxxxx

# App ID (visible in Whop Developer Dashboard)
NEXT_PUBLIC_WHOP_APP_ID=app_xxxxxxxxxxxx

# OAuth Credentials
WHOP_CLIENT_ID=xxxxxxxxxxxxxxxxxxxx
WHOP_CLIENT_SECRET=xxxxxxxxxxxxxxxxxxxx

# Webhook Secret (for signature verification)
# Generate new secret in Whop Dashboard → Webhooks
WHOP_WEBHOOK_SECRET=whop_webhook_xxxxxxxxxxxx

# Token Encryption Key (64 character hex string)
# Generate with: openssl rand -hex 32
WHOP_TOKEN_ENCRYPTION_KEY=0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef

# OAuth Redirect URI (auto-configured based on NEXT_PUBLIC_APP_URL)
WHOP_OAUTH_REDIRECT_URI=${NEXT_PUBLIC_APP_URL}/api/whop/auth/callback

# Checkout URLs (get from Whop Dashboard → Plans)
NEXT_PUBLIC_WHOP_BASIC_CHECKOUT_URL=https://whop.com/checkout/plan_basic_xxxxx
NEXT_PUBLIC_WHOP_PRO_CHECKOUT_URL=https://whop.com/checkout/plan_pro_xxxxx
NEXT_PUBLIC_WHOP_ENTERPRISE_CHECKOUT_URL=https://whop.com/checkout/plan_enterprise_xxxxx

# ========================================
# 3. DATABASE - SUPABASE (REQUIRED)
# ========================================
# Get credentials from: https://app.supabase.com/project/_/settings/api
# Documentation: https://supabase.com/docs

# Public Supabase URL
NEXT_PUBLIC_SUPABASE_URL=https://xxxxxxxxxxxxxxxxxxxx.supabase.co

# Anonymous Key (safe to expose in browser)
NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.xxxxx

# Service Role Key (CRITICAL: Never expose in client-side code)
SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.xxxxx

# Database Direct Connection (for migrations/admin tasks)
# Format: postgresql://postgres.[project-ref]:[password]@aws-0-[region].pooler.supabase.com:5432/postgres
DATABASE_URL=postgresql://postgres.xxxxxxxxxxxxxxxxxxxx:password@aws-0-us-east-1.pooler.supabase.com:5432/postgres

# Connection Pooling (Supabase Transaction mode recommended)
# Format: postgresql://postgres.[project-ref]:[password]@aws-0-[region].pooler.supabase.com:6543/postgres?pgbouncer=true
DATABASE_POOLER_URL=postgresql://postgres.xxxxxxxxxxxxxxxxxxxx:password@aws-0-us-east-1.pooler.supabase.com:6543/postgres?pgbouncer=true

# ========================================
# 4. AI SERVICES (REQUIRED)
# ========================================

# Anthropic Claude API (for chat responses)
# Get key from: https://console.anthropic.com/
# Rate limits: Check your plan tier
ANTHROPIC_API_KEY=sk-ant-api03-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# OpenAI API (for transcription and embeddings)
# Get key from: https://platform.openai.com/api-keys
# Rate limits: tier-based, monitor usage
OPENAI_API_KEY=sk-proj-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# ========================================
# 5. STORAGE & CDN (REQUIRED)
# ========================================
# Using Supabase Storage - no additional config needed
# Buckets configured: 'videos', 'thumbnails', 'user-uploads'
# Storage is managed through Supabase credentials above

# Alternative: Cloudflare R2 (if migrating from Supabase Storage)
# R2_ACCOUNT_ID=your_account_id
# R2_ACCESS_KEY_ID=your_access_key
# R2_SECRET_ACCESS_KEY=your_secret_key
# R2_BUCKET_NAME=video-wizard-production
# R2_PUBLIC_URL=https://pub-xxxxxxxxxxxx.r2.dev

# ========================================
# 6. MONITORING & ANALYTICS (REQUIRED)
# ========================================

# Sentry Error Tracking
# Get from: https://sentry.io/settings/[org]/projects/[project]/keys/
SENTRY_DSN=https://xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx@o000000.ingest.us.sentry.io/0000000
SENTRY_AUTH_TOKEN=sntrys_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
SENTRY_ORG=your-org-name
SENTRY_PROJECT=video-wizard

# Enable Sentry in production
NEXT_PUBLIC_SENTRY_ENABLED=true

# Sentry Environment
SENTRY_ENVIRONMENT=production

# Source Maps (upload to Sentry)
SENTRY_UPLOAD_SOURCE_MAPS=true

# PostHog Product Analytics
# Get from: https://app.posthog.com/project/settings
NEXT_PUBLIC_POSTHOG_KEY=phc_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
NEXT_PUBLIC_POSTHOG_HOST=https://app.posthog.com

# Vercel Analytics (automatically enabled if deployed on Vercel)
# No configuration needed - included in Vercel plan

# ========================================
# 7. CACHE & QUEUE (REQUIRED)
# ========================================

# Vercel KV (Redis) - for rate limiting and session caching
# Get from: Vercel Dashboard → Storage → KV
KV_URL=redis://default:xxxxxxxxxxxxxxxxxxxxxxxx@bold-krill-12345.upstash.io:6379
KV_REST_API_URL=https://bold-krill-12345.upstash.io
KV_REST_API_TOKEN=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
KV_REST_API_READ_ONLY_TOKEN=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# Inngest Job Queue - for background video processing
# Get from: https://app.inngest.com/
INNGEST_EVENT_KEY=evt_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
INNGEST_SIGNING_KEY=signkey-prod-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# Inngest Environment (for visibility)
INNGEST_ENV=production

# ========================================
# 8. EMAIL SERVICE (REQUIRED)
# ========================================

# Resend Email API
# Get from: https://resend.com/api-keys
RESEND_API_KEY=re_xxxxxxxxxxxxxxxxxxxxxxxxxxxx

# Sender email (must be verified domain)
RESEND_FROM_EMAIL=noreply@yourdomain.com

# Reply-to email
RESEND_REPLY_TO_EMAIL=support@yourdomain.com

# ========================================
# 9. DISCORD INTEGRATION (OPTIONAL)
# ========================================
# ENTERPRISE tier feature only
# Get credentials from: https://discord.com/developers/applications

# Discord Bot Token
DISCORD_BOT_TOKEN=MTxxxxxxxxxxxxxxxxxx.xxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxx

# Discord OAuth
DISCORD_CLIENT_ID=000000000000000000
DISCORD_CLIENT_SECRET=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# Your Discord Server ID (right-click server → Copy ID with Developer Mode on)
DISCORD_GUILD_ID=000000000000000000

# Enable Discord bot features
ENABLE_DISCORD_BOT=false

# Discord Webhook for notifications (optional)
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/000000000000000000/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# ========================================
# 10. YOUTUBE INTEGRATION (OPTIONAL)
# ========================================
# For YouTube video import feature
# Get from: https://console.cloud.google.com/

# YouTube Data API v3 Key
# Setup: Create project → Enable API → Create credentials
YOUTUBE_API_KEY=AIzaSyXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

# YouTube API Quota (default: 10,000 units/day)
# Monitor usage: https://console.cloud.google.com/apis/api/youtube.googleapis.com/quotas
YOUTUBE_API_QUOTA_LIMIT=10000

# ========================================
# 11. SECURITY & ENCRYPTION (REQUIRED)
# ========================================

# Session Secret (for cookie encryption)
# Generate with: openssl rand -base64 32
SESSION_SECRET=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# CSRF Token Secret
# Generate with: openssl rand -base64 32
CSRF_SECRET=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# API Rate Limiting
RATE_LIMIT_REQUESTS_PER_MINUTE=100
RATE_LIMIT_REQUESTS_PER_HOUR=1000

# Maximum upload file size (in bytes)
MAX_UPLOAD_SIZE=524288000

# Allowed CORS origins (comma-separated)
ALLOWED_CORS_ORIGINS=https://yourdomain.com,https://www.yourdomain.com

# ========================================
# FEATURE FLAGS (OPTIONAL)
# ========================================

# Enable beta features
ENABLE_BETA_FEATURES=false

# Enable experimental AI features
ENABLE_EXPERIMENTAL_AI=false

# Enable maintenance mode
MAINTENANCE_MODE=false

# ========================================
# DEPLOYMENT METADATA (AUTO-SET BY VERCEL)
# ========================================
# These are automatically set by Vercel, do not manually configure

# VERCEL=1
# VERCEL_ENV=production
# VERCEL_URL=your-app-xxxxxxxxxxxx.vercel.app
# VERCEL_GIT_COMMIT_SHA=abc123...
# VERCEL_GIT_COMMIT_REF=main
# VERCEL_GIT_REPO_OWNER=your-org
# VERCEL_GIT_REPO_SLUG=video-wizard

# ========================================
# VALIDATION CHECKLIST
# ========================================
# Before deploying, ensure:
# [ ] All REQUIRED variables are set
# [ ] Secrets are not committed to git
# [ ] API keys have appropriate permissions
# [ ] Database connection strings use pooler URL
# [ ] Webhook secrets are configured in provider dashboards
# [ ] Rate limits are appropriate for your tier
# [ ] Monitoring is configured and tested
# [ ] Email domain is verified
# [ ] CORS origins include production domain
# [ ] All URLs use HTTPS in production
#
# Run validation: npm run validate:env
# ========================================
